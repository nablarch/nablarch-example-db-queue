<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.nablarch.archetype</groupId>
    <artifactId>nablarch-archetype-parent</artifactId>
    <version>5u9</version>
  </parent>

  <groupId>com.nablarch.example</groupId>
  <artifactId>nablarch-example-db-queue</artifactId>
  <version>5u9</version>

  <properties>
    <scheme>データベースメッセージング</scheme>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- 環境ごとのリソースディレクトリ(プロファイルにより切り替わる) -->
    <env.resources>${project.basedir}/src/${envDir}/resources</env.resources>
    <db.product>h2</db.product>
    <db.type>h2</db.type>

    <db.dmpFile>nablarch_example.sql</db.dmpFile>
    <db.user>SAMPLE</db.user>
    <db.password>SAMPLE</db.password>


    <db.jdbcDriver>org.h2.Driver</db.jdbcDriver>
    <db.url>jdbc:h2:./db/nablarch_example_db_queue</db.url>
    <db.adminUser>SAMPLE</db.adminUser>
    <db.adminPassword>SAMPLE</db.adminPassword>

    <!-- maven-gsp-dba-pluginで配布するテストデータのartifactId。 -->
    <db.testDataArtifactId>nablarch-example-db-queue-testdata</db.testDataArtifactId>

    <!-- maven-gsp-dba-pluginでEntityクラスを生成するパッケージ名。 -->
    <dba.entity.rootPackage>com.nablarch.example.app</dba.entity.rootPackage>
    <dba.entity.entityPackage>entity</dba.entity.entityPackage>

    <!-- 使用するDBによって変更になるパラメータ -->
    <dba.useDB>${db.product}</dba.useDB>
    <dba.classifier>${dba.useDB}</dba.classifier>
    <dba.erdFile>src/main/resources/entity/${dba.useDB}.edm</dba.erdFile>
    <dba.extraDdlDirectory>src/main/resources/extraDdl/${dba.useDB}</dba.extraDdlDirectory>

    <dba.dataDirectory>src/test/resources/testdata</dba.dataDirectory>
    <dba.entity.javaFileDestDir>target/generated-sources/entity</dba.entity.javaFileDestDir>
    
    <includeScope>runtime</includeScope>
  </properties>

  <!--
    このプロファイルは環境を指定するものであり、相互に排他的である。
    複数のプロファイルを同時に指定してはならない。
  -->
  <profiles>
    <!-- 開発環境 -->
    <profile>
      <id>development</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!-- 環境設定ファイル自動生成ツールで指定している環境名 -->
        <envName>開発環境</envName>
        <!-- Mavenの環境別リソースのディレクトリ名 -->
        <envDir>ut</envDir>
        <finalName>${project.artifactId}-${project.version}</finalName>
      </properties>
    </profile>

    <!-- 本番環境 -->
    <profile>
      <id>production</id>
      <properties>
        <envName>本番環境</envName>
        <envDir>production</envDir>
      </properties>
    </profile>
  </profiles>

  <dependencies>

    <dependency>
      <groupId>com.nablarch.configuration</groupId>
      <artifactId>nablarch-main-default-configuration</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.profile</groupId>
      <artifactId>nablarch-batch</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-batch</artifactId>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.187</version>
    </dependency>

    <dependency>
      <groupId>com.nablarch.configuration</groupId>
      <artifactId>nablarch-testing-default-configuration</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-testing</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-messaging-http</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <finalName>${finalName}</finalName>
    <resources>
      <resource>
        <directory>${env.resources}</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/${db.product}/resources</directory>
      </resource>
    </resources>
    <plugins>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <finalName>application-${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>nablarch.fw.launcher.Main</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>jp.co.tis.gsp</groupId>
        <artifactId>gsp-dba-maven-plugin</artifactId>
        <configuration>
          <artifactId>${db.testDataArtifactId}</artifactId>
          <version>0.0.1</version>
          <erdFile>${dba.erdFile}</erdFile>
          <adminUser>${db.adminUser}</adminUser>
          <adminPassword>${db.adminPassword}</adminPassword>
          <url>${db.url}</url>
          <user>${db.user}</user>
          <password>${db.password}</password>
          <driver>${db.jdbcDriver}</driver>
          <rootPackage>com.nablarch.example.app</rootPackage>
          <dataDirectory>${dba.dataDirectory}</dataDirectory>
          <useAccessor>true</useAccessor>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.187</version>
          </dependency>
        </dependencies>
        <executions>
          <!--  DDLをObjectBrowserERから生成する  -->
          <execution>
            <id>generate-ddl</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate-ddl</goal>
            </goals>
          </execution>
          <!--  DDLを実行する  -->
          <execution>
            <id>execute-ddl</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>execute-ddl</goal>
            </goals>
          </execution>
          <!--  Entityを生成する  -->
          <execution>
            <id>generate-entity</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate-entity</goal>
            </goals>
          </execution>
          <!--  データをロードする  -->
          <execution>
            <id>load-data</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>load-data</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- 自動生成されたEntityをビルド対象に組み込む -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals><goal>add-source</goal></goals>
            <configuration>
              <sources>
                <source>${dba.entity.javaFileDestDir}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- レポーティング用のプラグインを追加 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- MANIFEST.MFでClass-Pathを指定すると、依存jar内で定義されているtaglibのuriを正しく解決してくれない。 -->
          <useManifestOnlyJar>false</useManifestOnlyJar>
        </configuration>
      </plugin>
      <!-- カバレッジ取得 -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <!-- 0.7.3以降のJaCoCoではリクエスト単体テストのカバレッジを計測できない。
          Jenkinsとの連携にはJaCoCoプラグインの1系を使用する(2系はJaCoCo0.7.4以降が必須) -->
        <configuration>
          <excludes>
            <exclude>**/com/nablarch/example/app/entity/*</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.nablarch.profile</groupId>
        <artifactId>nablarch-bom</artifactId>
        <version>5u9</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
